name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '15 0 * * *'

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12, 14, 16, 18, 20, 22]
        exclude:
          # macos-latest is now ARM, so exclude Node 12/14
          - os: macos-latest
            node-version: 12
          - os: macos-latest
            node-version: 14
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      NODE: ${{ matrix.node-version }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '*'

      - run: npm ci
        if: ${{ github.event_name != 'schedule' }}

      - shell: bash
        run: |
          npm install -g $(jq -r '.packageManager' < package.json)
          rm package-lock.json
          npm i
        if: ${{ github.event_name == 'schedule' }}

      - run: npm run build

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - run: npm run coverage
      - uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        if: ${{ github.event_name != 'schedule' }}
        continue-on-error: true
        timeout-minutes: 5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,NODE

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '*'
      - run: npm ci
      - run: npx eslint .

  dprint:
    name: dprint
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '*'
      - run: npm ci
      - run: npx dprint check

  check-latest:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Check latest on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: '*'
      - run: npm ci
      - run: npm pack

      - run: npm install -g hereby

      - run: |
          set -exo pipefail
          cd $(mktemp -d)
          npm init -y
          npm install ${{ github.workspace }}/*.tgz

          cp ${{ github.workspace }}/dist/__tests__/cli/__fixtures__/Herebyfile.mjs .

          hereby --tasks
        name: Verify that latest hereby can run local hereby

      - run: |
          set -exo pipefail
          cd $(mktemp -d)
          npm init -y
          npm install hereby

          cp ${{ github.workspace }}/dist/__tests__/cli/__fixtures__/Herebyfile.mjs .

          node ${{ github.workspace }}/bin/hereby.js --tasks
        name: Verify that local hereby can run latest hereby

  required:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - test
      - eslint
      - dprint
      - check-latest

    steps:
      - name: Check required jobs
        run: |
          results=(
            "${{ needs.test.result }}"
            "${{ github.event_name != 'schedule' && needs.eslint.result || 'success' }}"
            "${{ github.event_name != 'schedule' && needs.dprint.result || 'success' }}"
            "${{ needs.check-latest.result }}"
          )

          for result in "${results[@]}"; do
            if [[ "$result" != "success" ]]; then
              echo "One or more jobs failed"
              exit 1
            fi
          done
