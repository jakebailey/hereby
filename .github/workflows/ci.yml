name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '15 0 * * *'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [12, 14, 16, 18, 20, 21]
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      NODE: ${{ matrix.node-version }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1

      - run: npm ci
        if: ${{ github.event_name != 'schedule' }}

      - shell: bash
        run: |
          npm install -g $(jq -r '.packageManager' < package.json)
          rm package-lock.json
          npm i
        if: ${{ github.event_name == 'schedule' }}

      - run: npm run build

      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm run coverage
      - uses: codecov/codecov-action@e0b68c6749509c5f83f984dd99a76a1c1a231044 # v4.0.1
        if: ${{ github.event_name != 'schedule' }}
        continue-on-error: true
        timeout-minutes: 5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,NODE

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
      - run: npm ci
      - run: npx eslint .

  dprint:
    name: dprint
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
      - run: npm ci
      - run: npx dprint check

  required:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - test
      - eslint
      - dprint

    steps:
      - name: Check required jobs
        run: |
          results=(
            "${{ needs.test.result }}"
            "${{ needs.eslint.result }}"
            "${{ needs.dprint.result }}"
          )

          for result in "${results[@]}"; do
            if [[ "$result" != "success" ]]; then
              echo "One or more jobs failed"
              exit 1
            fi
          done
